name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IMAGE_NAME_LIQUIDE_BLEIBEN: liquide-bleiben
  IMAGE_NAME_CHATBOT: chatbot

jobs:

  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [$IMAGE_NAME_LIQUIDE_BLEIBEN, $IMAGE_NAME_CHATBOT]
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image $IMAGE_NAME_LIQUIDE_BLEIBEN
      run: docker build . --file Dockerfile --tag $IMAGE_NAME_LIQUIDE_BLEIBEN

    - name: Build the Docker image $IMAGE_NAME_CHATBOT
      run: docker build . --file chatbot/Dockerfile --tag $IMAGE_NAME_CHATBOT
      # :$(date +%s)
    - name: List all images
      run: docker images
    # adapted from: https://github.com/actions/starter-workflows/blob/master/ci/docker-publish.yml
    - name: Log into Github container registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/${{ matrix.image }}
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        # [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag ${{ matrix.image }} $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
